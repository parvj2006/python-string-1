# Function to check if a number is prime
def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True

# Function to check if a number is perfect
def is_perfect(n):
    if n <= 1:
        return False
    sum_factors = 0
    for i in range(1, n):
        if n % i == 0:
            sum_factors += i
    return sum_factors == n

# Function to check if a number is Armstrong
def is_armstrong(n):
    num_str = str(n)
    length = len(num_str)
    sum_arm = 0
    for digit in num_str:
        sum_arm += int(digit) ** length
    return sum_arm == n

# Function to check if a number is palindrome
def is_palindrome(n):
    num_str = str(n)
    return num_str == num_str[::-1]

# Function to check if a number is automorphic
def is_automorphic(n):
    square = n * n
    return str(square).endswith(str(n))

# Input: Get the number from the user
number = int(input("Enter a number: "))

# Check and display results
print(f"Is {number} a prime number? {is_prime(number)}")
print(f"Is {number} a perfect number? {is_perfect(number)}")
print(f"Is {number} an Armstrong number? {is_armstrong(number)}")
print(f"Is {number} a palindrome number? {is_palindrome(number)}")
print(f"Is {number} an automorphic number? {is_automorphic(number)}")
